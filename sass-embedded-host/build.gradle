plugins {
    id "java-library"
}

dependencies {
    api project(":sass-embedded-protocol")
    api 'org.slf4j:slf4j-api:1.7.30'
    implementation("com.squareup.okio:okio:1.17.5")

    testImplementation 'org.slf4j:slf4j-simple:1.7.30'
}

//"https://github.com/sass/dart-sass-embedded/releases/download/1.0.0-beta.6/sass_embedded-1.0.0-beta.6-macos-x64.tar.gz

def dartSassVersion = "1.0.0-beta.6"

task dartSassLinuxIa32(type: io.freefair.gradle.plugins.okhttp.tasks.DownloadFile) {
    url = "https://github.com/sass/dart-sass-embedded/releases/download/$dartSassVersion/sass_embedded-$dartSassVersion-linux-ia32.tar.gz"
    outputFile = new File(temporaryDir, "dart-sass-$dartSassVersion-linux-ia32.tar.gz")
}
task dartSassLinux64(type: io.freefair.gradle.plugins.okhttp.tasks.DownloadFile) {
    url = "https://github.com/sass/dart-sass-embedded/releases/download/$dartSassVersion/sass_embedded-$dartSassVersion-linux-x64.tar.gz"
    outputFile = new File(temporaryDir, "dart-sass-$dartSassVersion-linux-x64.tar.gz")
}

task dartSassMacos64(type: io.freefair.gradle.plugins.okhttp.tasks.DownloadFile) {
    url = "https://github.com/sass/dart-sass-embedded/releases/download/$dartSassVersion/sass_embedded-$dartSassVersion-macos-x64.tar.gz"
    outputFile = new File(temporaryDir, "dart-sass-$dartSassVersion-macos-x64.tar.gz")
}

task dartSassWindowsIa32(type: io.freefair.gradle.plugins.okhttp.tasks.DownloadFile) {
    url = "https://github.com/sass/dart-sass-embedded/releases/download/$dartSassVersion/sass_embedded-$dartSassVersion-windows-ia32.zip"
    outputFile = new File(temporaryDir, "dart-sass-$dartSassVersion-windows-ia32.zip")
}
task dartSassWindows64(type: io.freefair.gradle.plugins.okhttp.tasks.DownloadFile) {
    url = "https://github.com/sass/dart-sass-embedded/releases/download/$dartSassVersion/sass_embedded-$dartSassVersion-windows-x64.zip"
    outputFile = new File(temporaryDir, "dart-sass-$dartSassVersion-windows-x64.zip")
}

processResources {
    dependsOn dartSassLinuxIa32
    into("linux-ia32") {
        from(tarTree(dartSassLinuxIa32.outputFile))
    }
    dependsOn dartSassLinux64
    into("linux-x64") {
        from(tarTree(dartSassLinux64.outputFile))
    }

    dependsOn dartSassMacos64
    into("macos-x64") {
        from(tarTree(dartSassMacos64.outputFile))
    }

    dependsOn dartSassWindowsIa32
    into("windows-ia32") {
        from(zipTree(dartSassWindowsIa32.outputFile))
    }
    dependsOn dartSassWindows64
    into("windows-x64") {
        from(zipTree(dartSassWindows64.outputFile))
    }
}

test {
    useJUnitPlatform()
}